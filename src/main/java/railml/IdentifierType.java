//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.05.25 at 11:54:17 AM EEST 
//


package railml;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for IdentifierType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="IdentifierType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="CommercialTrainNumber"/&gt;
 *     &lt;enumeration value="OperationalTrainNumber"/&gt;
 *     &lt;enumeration value="TafTapTsiCaseReferenceId"/&gt;
 *     &lt;enumeration value="TafTapTsiPathId"/&gt;
 *     &lt;enumeration value="TafTapTsiPathRequestId"/&gt;
 *     &lt;enumeration value="TafTapTsiRouteId"/&gt;
 *     &lt;enumeration value="TafTapTsiTrainId"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "IdentifierType")
@XmlEnum
public enum IdentifierType {

    @XmlEnumValue("CommercialTrainNumber")
    COMMERCIAL_TRAIN_NUMBER("CommercialTrainNumber"),
    @XmlEnumValue("OperationalTrainNumber")
    OPERATIONAL_TRAIN_NUMBER("OperationalTrainNumber"),
    @XmlEnumValue("TafTapTsiCaseReferenceId")
    TAF_TAP_TSI_CASE_REFERENCE_ID("TafTapTsiCaseReferenceId"),
    @XmlEnumValue("TafTapTsiPathId")
    TAF_TAP_TSI_PATH_ID("TafTapTsiPathId"),
    @XmlEnumValue("TafTapTsiPathRequestId")
    TAF_TAP_TSI_PATH_REQUEST_ID("TafTapTsiPathRequestId"),
    @XmlEnumValue("TafTapTsiRouteId")
    TAF_TAP_TSI_ROUTE_ID("TafTapTsiRouteId"),
    @XmlEnumValue("TafTapTsiTrainId")
    TAF_TAP_TSI_TRAIN_ID("TafTapTsiTrainId");
    private final String value;

    IdentifierType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IdentifierType fromValue(String v) {
        for (IdentifierType c: IdentifierType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
