//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.05.25 at 11:54:17 AM EEST 
//


package railml;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tStackRelation.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="tStackRelation"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="centerOfTrack"/&gt;
 *     &lt;enumeration value="downLeftBranchOfCrossing"/&gt;
 *     &lt;enumeration value="downRightBranchOfCrossing"/&gt;
 *     &lt;enumeration value="leftBranchOfSwitch"/&gt;
 *     &lt;enumeration value="rightBranchOfSwitch"/&gt;
 *     &lt;enumeration value="tipOfSwitch"/&gt;
 *     &lt;enumeration value="upLeftBranchOfCrossing"/&gt;
 *     &lt;enumeration value="upRightBranchOfCrossing"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "tStackRelation")
@XmlEnum
public enum TStackRelation {

    @XmlEnumValue("centerOfTrack")
    CENTER_OF_TRACK("centerOfTrack"),
    @XmlEnumValue("downLeftBranchOfCrossing")
    DOWN_LEFT_BRANCH_OF_CROSSING("downLeftBranchOfCrossing"),
    @XmlEnumValue("downRightBranchOfCrossing")
    DOWN_RIGHT_BRANCH_OF_CROSSING("downRightBranchOfCrossing"),
    @XmlEnumValue("leftBranchOfSwitch")
    LEFT_BRANCH_OF_SWITCH("leftBranchOfSwitch"),
    @XmlEnumValue("rightBranchOfSwitch")
    RIGHT_BRANCH_OF_SWITCH("rightBranchOfSwitch"),
    @XmlEnumValue("tipOfSwitch")
    TIP_OF_SWITCH("tipOfSwitch"),
    @XmlEnumValue("upLeftBranchOfCrossing")
    UP_LEFT_BRANCH_OF_CROSSING("upLeftBranchOfCrossing"),
    @XmlEnumValue("upRightBranchOfCrossing")
    UP_RIGHT_BRANCH_OF_CROSSING("upRightBranchOfCrossing");
    private final String value;

    TStackRelation(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TStackRelation fromValue(String v) {
        for (TStackRelation c: TStackRelation.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
