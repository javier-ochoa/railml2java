//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.05.25 at 11:54:17 AM EEST 
//


package railml;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for HolidayMode.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="HolidayMode"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="neverRunsOnHolidays"/&gt;
 *     &lt;enumeration value="runsOnAllHolidays"/&gt;
 *     &lt;enumeration value="runsOnIndicatedHolidays"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "HolidayMode")
@XmlEnum
public enum HolidayMode {


    /**
     * Indicates that the validity does not apply on all public holidays no matter if the specified pattern is marked with one for that day. Trains referencing a validity with this value set will not run on public holidays.
     * 
     */
    @XmlEnumValue("neverRunsOnHolidays")
    NEVER_RUNS_ON_HOLIDAYS("neverRunsOnHolidays"),

    /**
     * Indicates that the validity applies on all public holidays. This means that no matter what is specified via the bitMask, the validity will apply and a train using this validity is scheduled to run.
     * 
     */
    @XmlEnumValue("runsOnAllHolidays")
    RUNS_ON_ALL_HOLIDAYS("runsOnAllHolidays"),

    /**
     * Indicates that the validity applies even if a day is a public holiday. 
     * 
     */
    @XmlEnumValue("runsOnIndicatedHolidays")
    RUNS_ON_INDICATED_HOLIDAYS("runsOnIndicatedHolidays");
    private final String value;

    HolidayMode(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static HolidayMode fromValue(String v) {
        for (HolidayMode c: HolidayMode.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
