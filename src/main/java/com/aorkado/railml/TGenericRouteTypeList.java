//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.05.25 at 12:29:34 PM EEST 
//


package com.aorkado.railml;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tGenericRouteTypeList.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="tGenericRouteTypeList"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="auxilliary"/&gt;
 *     &lt;enumeration value="block"/&gt;
 *     &lt;enumeration value="callOn"/&gt;
 *     &lt;enumeration value="nonElectrified"/&gt;
 *     &lt;enumeration value="normal"/&gt;
 *     &lt;enumeration value="occupied"/&gt;
 *     &lt;enumeration value="shunting"/&gt;
 *     &lt;enumeration value="siding"/&gt;
 *     &lt;enumeration value="tunnel"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "tGenericRouteTypeList")
@XmlEnum
public enum TGenericRouteTypeList {

    @XmlEnumValue("auxilliary")
    AUXILLIARY("auxilliary"),
    @XmlEnumValue("block")
    BLOCK("block"),
    @XmlEnumValue("callOn")
    CALL_ON("callOn"),
    @XmlEnumValue("nonElectrified")
    NON_ELECTRIFIED("nonElectrified"),
    @XmlEnumValue("normal")
    NORMAL("normal"),
    @XmlEnumValue("occupied")
    OCCUPIED("occupied"),
    @XmlEnumValue("shunting")
    SHUNTING("shunting"),
    @XmlEnumValue("siding")
    SIDING("siding"),
    @XmlEnumValue("tunnel")
    TUNNEL("tunnel");
    private final String value;

    TGenericRouteTypeList(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TGenericRouteTypeList fromValue(String v) {
        for (TGenericRouteTypeList c: TGenericRouteTypeList.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
