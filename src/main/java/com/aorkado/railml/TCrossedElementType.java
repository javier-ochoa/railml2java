//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.05.25 at 12:29:34 PM EEST 
//


package com.aorkado.railml;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tCrossedElementType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="tCrossedElementType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="area"/&gt;
 *     &lt;enumeration value="city"/&gt;
 *     &lt;enumeration value="cycleway"/&gt;
 *     &lt;enumeration value="footway"/&gt;
 *     &lt;enumeration value="lake"/&gt;
 *     &lt;enumeration value="motorway"/&gt;
 *     &lt;enumeration value="peak"/&gt;
 *     &lt;enumeration value="permissiveRoad"/&gt;
 *     &lt;enumeration value="primaryRoad"/&gt;
 *     &lt;enumeration value="privateRoad"/&gt;
 *     &lt;enumeration value="ridge"/&gt;
 *     &lt;enumeration value="river"/&gt;
 *     &lt;enumeration value="road"/&gt;
 *     &lt;enumeration value="secondaryRoad"/&gt;
 *     &lt;enumeration value="tertiaryRoad"/&gt;
 *     &lt;enumeration value="valley"/&gt;
 *     &lt;enumeration value="railway"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "tCrossedElementType")
@XmlEnum
public enum TCrossedElementType {

    @XmlEnumValue("area")
    AREA("area"),
    @XmlEnumValue("city")
    CITY("city"),

    /**
     * path, track or lane restricted to bicycles
     * 
     */
    @XmlEnumValue("cycleway")
    CYCLEWAY("cycleway"),

    /**
     * path, track or sidewalk restricted to pedestrian traffic
     * 
     */
    @XmlEnumValue("footway")
    FOOTWAY("footway"),
    @XmlEnumValue("lake")
    LAKE("lake"),

    /**
     * national road with restricted access, divided traffic and grade separated junctions
     * 
     */
    @XmlEnumValue("motorway")
    MOTORWAY("motorway"),
    @XmlEnumValue("peak")
    PEAK("peak"),

    /**
     * private road with public access
     * 
     */
    @XmlEnumValue("permissiveRoad")
    PERMISSIVE_ROAD("permissiveRoad"),

    /**
     * national road linking large towns; no motorway
     * 
     */
    @XmlEnumValue("primaryRoad")
    PRIMARY_ROAD("primaryRoad"),

    /**
     * private road with no public access
     * 
     */
    @XmlEnumValue("privateRoad")
    PRIVATE_ROAD("privateRoad"),
    @XmlEnumValue("ridge")
    RIDGE("ridge"),
    @XmlEnumValue("river")
    RIVER("river"),

    /**
     * unknown road type
     * 
     */
    @XmlEnumValue("road")
    ROAD("road"),

    /**
     * county road linking towns
     * 
     */
    @XmlEnumValue("secondaryRoad")
    SECONDARY_ROAD("secondaryRoad"),

    /**
     * municipal road within towns and in the countryside
     * 
     */
    @XmlEnumValue("tertiaryRoad")
    TERTIARY_ROAD("tertiaryRoad"),
    @XmlEnumValue("valley")
    VALLEY("valley"),
    @XmlEnumValue("railway")
    RAILWAY("railway");
    private final String value;

    TCrossedElementType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TCrossedElementType fromValue(String v) {
        for (TCrossedElementType c: TCrossedElementType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
