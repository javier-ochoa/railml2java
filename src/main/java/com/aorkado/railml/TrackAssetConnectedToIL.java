//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.05.25 at 12:29:34 PM EEST 
//


package com.aorkado.railml;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * List of Track Assets that are connected to a specific interlocking. This list would typically be kept in one or more separate files. This approach allows the Infrastructure Manager to split the assets under control of a specific interlocking into different areas. Each area would be allocated a list of Track Assets Connected to the interlocking. This supports for instance a scenario in which an interlocking is split into several smaller ones during a resignalling project.
 * 
 * <p>Java class for TrackAssetConnectedToIL complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TrackAssetConnectedToIL"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{https://www.railml.org/schemas/3.2}BasicEntityIL"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="connectedTrackAsset" type="{https://www.railml.org/schemas/3.2}EntityILref" maxOccurs="unbounded"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="extentOfControl" type="{https://www.railml.org/schemas/3.2}tExtentOfControl" /&gt;
 *       &lt;anyAttribute namespace='##other'/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TrackAssetConnectedToIL", propOrder = {
    "connectedTrackAsset"
})
public class TrackAssetConnectedToIL
    extends BasicEntityIL
{

    @XmlElement(required = true)
    protected List<EntityILref> connectedTrackAsset;
    @XmlAttribute(name = "extentOfControl")
    protected TExtentOfControl extentOfControl;

    /**
     * Gets the value of the connectedTrackAsset property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the connectedTrackAsset property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConnectedTrackAsset().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EntityILref }
     * 
     * 
     */
    public List<EntityILref> getConnectedTrackAsset() {
        if (connectedTrackAsset == null) {
            connectedTrackAsset = new ArrayList<EntityILref>();
        }
        return this.connectedTrackAsset;
    }

    /**
     * Gets the value of the extentOfControl property.
     * 
     * @return
     *     possible object is
     *     {@link TExtentOfControl }
     *     
     */
    public TExtentOfControl getExtentOfControl() {
        return extentOfControl;
    }

    /**
     * Sets the value of the extentOfControl property.
     * 
     * @param value
     *     allowed object is
     *     {@link TExtentOfControl }
     *     
     */
    public void setExtentOfControl(TExtentOfControl value) {
        this.extentOfControl = value;
    }

}
