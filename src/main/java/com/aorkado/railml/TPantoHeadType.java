//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.05.25 at 12:29:34 PM EEST 
//


package com.aorkado.railml;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for tPantoHeadType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="tPantoHeadType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="AC_1450"/&gt;
 *     &lt;enumeration value="BE_1760"/&gt;
 *     &lt;enumeration value="DC_1450"/&gt;
 *     &lt;enumeration value="EP_1600"/&gt;
 *     &lt;enumeration value="GB_1600"/&gt;
 *     &lt;enumeration value="GB_CTRL_1600"/&gt;
 *     &lt;enumeration value="NO_SO_1800"/&gt;
 *     &lt;enumeration value="other"/&gt;
 *     &lt;enumeration value="PL_1950"/&gt;
 *     &lt;enumeration value="Type1_1950"/&gt;
 *     &lt;enumeration value="Type2_1950"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "tPantoHeadType")
@XmlEnum
public enum TPantoHeadType {

    AC_1450("AC_1450"),
    BE_1760("BE_1760"),
    DC_1450("DC_1450"),
    EP_1600("EP_1600"),
    GB_1600("GB_1600"),
    GB_CTRL_1600("GB_CTRL_1600"),
    NO_SO_1800("NO_SO_1800"),
    @XmlEnumValue("other")
    OTHER("other"),
    PL_1950("PL_1950"),
    @XmlEnumValue("Type1_1950")
    TYPE_1_1950("Type1_1950"),
    @XmlEnumValue("Type2_1950")
    TYPE_2_1950("Type2_1950");
    private final String value;

    TPantoHeadType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TPantoHeadType fromValue(String v) {
        for (TPantoHeadType c: TPantoHeadType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
