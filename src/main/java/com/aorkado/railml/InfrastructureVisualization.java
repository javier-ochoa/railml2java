//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.05.25 at 12:29:34 PM EEST 
//


package com.aorkado.railml;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlType;


/**
 * visualization of (a part of) a railway dataset, e.g. visualization of a railway network on a screen or a schematic map
 * 
 * <p>Java class for InfrastructureVisualization complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="InfrastructureVisualization"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{https://www.railml.org/schemas/3.2}VisualizationBaseElement"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="areaElementProjection" type="{https://www.railml.org/schemas/3.2}AreaProjection" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="ellipticalProjection" type="{https://www.railml.org/schemas/3.2}EllipticalProjection" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="linearElementProjection" type="{https://www.railml.org/schemas/3.2}LinearProjection" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="spotElementProjection" type="{https://www.railml.org/schemas/3.2}SpotProjection" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="positioningSystemRef" type="{https://www.railml.org/schemas/3.2}tRef" /&gt;
 *       &lt;anyAttribute namespace='##other'/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "InfrastructureVisualization", propOrder = {
    "areaElementProjection",
    "ellipticalProjection",
    "linearElementProjection",
    "spotElementProjection"
})
public class InfrastructureVisualization
    extends VisualizationBaseElement
{

    protected List<AreaProjection> areaElementProjection;
    protected List<EllipticalProjection> ellipticalProjection;
    protected List<LinearProjection> linearElementProjection;
    protected List<SpotProjection> spotElementProjection;
    @XmlAttribute(name = "positioningSystemRef")
    protected String positioningSystemRef;

    /**
     * Gets the value of the areaElementProjection property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the areaElementProjection property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAreaElementProjection().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AreaProjection }
     * 
     * 
     */
    public List<AreaProjection> getAreaElementProjection() {
        if (areaElementProjection == null) {
            areaElementProjection = new ArrayList<AreaProjection>();
        }
        return this.areaElementProjection;
    }

    /**
     * Gets the value of the ellipticalProjection property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the ellipticalProjection property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEllipticalProjection().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link EllipticalProjection }
     * 
     * 
     */
    public List<EllipticalProjection> getEllipticalProjection() {
        if (ellipticalProjection == null) {
            ellipticalProjection = new ArrayList<EllipticalProjection>();
        }
        return this.ellipticalProjection;
    }

    /**
     * Gets the value of the linearElementProjection property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the linearElementProjection property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLinearElementProjection().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LinearProjection }
     * 
     * 
     */
    public List<LinearProjection> getLinearElementProjection() {
        if (linearElementProjection == null) {
            linearElementProjection = new ArrayList<LinearProjection>();
        }
        return this.linearElementProjection;
    }

    /**
     * Gets the value of the spotElementProjection property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the spotElementProjection property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSpotElementProjection().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SpotProjection }
     * 
     * 
     */
    public List<SpotProjection> getSpotElementProjection() {
        if (spotElementProjection == null) {
            spotElementProjection = new ArrayList<SpotProjection>();
        }
        return this.spotElementProjection;
    }

    /**
     * Gets the value of the positioningSystemRef property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPositioningSystemRef() {
        return positioningSystemRef;
    }

    /**
     * Sets the value of the positioningSystemRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPositioningSystemRef(String value) {
        this.positioningSystemRef = value;
    }

}
