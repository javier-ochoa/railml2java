//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.05.25 at 12:29:34 PM EEST 
//


package com.aorkado.railml;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * This is the top level element for various company definitions regarding the railway services referred to in this file
 * 
 * <p>Java class for OrganizationalUnits complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="OrganizationalUnits"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="infrastructureManager" type="{https://www.railml.org/schemas/3.2}OrganizationalUnit" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="vehicleManufacturer" type="{https://www.railml.org/schemas/3.2}OrganizationalUnit" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="vehicleOperator" type="{https://www.railml.org/schemas/3.2}OrganizationalUnit" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="customer" type="{https://www.railml.org/schemas/3.2}OrganizationalUnit" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="railwayUndertaking" type="{https://www.railml.org/schemas/3.2}OrganizationalUnit" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="operationalUndertaking" type="{https://www.railml.org/schemas/3.2}OrganizationalUnit" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="concessionaire" type="{https://www.railml.org/schemas/3.2}OrganizationalUnit" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="contractor" type="{https://www.railml.org/schemas/3.2}OrganizationalUnit" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="organizationalUnit" type="{https://www.railml.org/schemas/3.2}OrganizationalUnit" maxOccurs="unbounded"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "OrganizationalUnits", propOrder = {
    "infrastructureManager",
    "vehicleManufacturer",
    "vehicleOperator",
    "customer",
    "railwayUndertaking",
    "operationalUndertaking",
    "concessionaire",
    "contractor",
    "organizationalUnit"
})
public class OrganizationalUnits {

    protected List<OrganizationalUnit> infrastructureManager;
    protected List<OrganizationalUnit> vehicleManufacturer;
    protected List<OrganizationalUnit> vehicleOperator;
    protected List<OrganizationalUnit> customer;
    protected List<OrganizationalUnit> railwayUndertaking;
    protected List<OrganizationalUnit> operationalUndertaking;
    protected List<OrganizationalUnit> concessionaire;
    protected List<OrganizationalUnit> contractor;
    @XmlElement(required = true)
    protected List<OrganizationalUnit> organizationalUnit;

    /**
     * Gets the value of the infrastructureManager property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the infrastructureManager property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInfrastructureManager().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OrganizationalUnit }
     * 
     * 
     */
    public List<OrganizationalUnit> getInfrastructureManager() {
        if (infrastructureManager == null) {
            infrastructureManager = new ArrayList<OrganizationalUnit>();
        }
        return this.infrastructureManager;
    }

    /**
     * Gets the value of the vehicleManufacturer property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the vehicleManufacturer property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVehicleManufacturer().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OrganizationalUnit }
     * 
     * 
     */
    public List<OrganizationalUnit> getVehicleManufacturer() {
        if (vehicleManufacturer == null) {
            vehicleManufacturer = new ArrayList<OrganizationalUnit>();
        }
        return this.vehicleManufacturer;
    }

    /**
     * Gets the value of the vehicleOperator property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the vehicleOperator property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getVehicleOperator().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OrganizationalUnit }
     * 
     * 
     */
    public List<OrganizationalUnit> getVehicleOperator() {
        if (vehicleOperator == null) {
            vehicleOperator = new ArrayList<OrganizationalUnit>();
        }
        return this.vehicleOperator;
    }

    /**
     * Gets the value of the customer property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the customer property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCustomer().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OrganizationalUnit }
     * 
     * 
     */
    public List<OrganizationalUnit> getCustomer() {
        if (customer == null) {
            customer = new ArrayList<OrganizationalUnit>();
        }
        return this.customer;
    }

    /**
     * Gets the value of the railwayUndertaking property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the railwayUndertaking property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRailwayUndertaking().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OrganizationalUnit }
     * 
     * 
     */
    public List<OrganizationalUnit> getRailwayUndertaking() {
        if (railwayUndertaking == null) {
            railwayUndertaking = new ArrayList<OrganizationalUnit>();
        }
        return this.railwayUndertaking;
    }

    /**
     * Gets the value of the operationalUndertaking property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the operationalUndertaking property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOperationalUndertaking().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OrganizationalUnit }
     * 
     * 
     */
    public List<OrganizationalUnit> getOperationalUndertaking() {
        if (operationalUndertaking == null) {
            operationalUndertaking = new ArrayList<OrganizationalUnit>();
        }
        return this.operationalUndertaking;
    }

    /**
     * Gets the value of the concessionaire property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the concessionaire property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConcessionaire().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OrganizationalUnit }
     * 
     * 
     */
    public List<OrganizationalUnit> getConcessionaire() {
        if (concessionaire == null) {
            concessionaire = new ArrayList<OrganizationalUnit>();
        }
        return this.concessionaire;
    }

    /**
     * Gets the value of the contractor property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the contractor property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContractor().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OrganizationalUnit }
     * 
     * 
     */
    public List<OrganizationalUnit> getContractor() {
        if (contractor == null) {
            contractor = new ArrayList<OrganizationalUnit>();
        }
        return this.contractor;
    }

    /**
     * Gets the value of the organizationalUnit property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a <CODE>set</CODE> method for the organizationalUnit property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOrganizationalUnit().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link OrganizationalUnit }
     * 
     * 
     */
    public List<OrganizationalUnit> getOrganizationalUnit() {
        if (organizationalUnit == null) {
            organizationalUnit = new ArrayList<OrganizationalUnit>();
        }
        return this.organizationalUnit;
    }

}
