//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.0 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.05.25 at 12:29:34 PM EEST 
//


package com.aorkado.railml;

import java.math.BigInteger;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlAttribute;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * virtual logical object used for indication of train numbers/IDs on HMI used by train management systems
 * Per position the train number fields can be arranged as a stack in order to take more than one number for the position.
 * 
 * <p>Java class for TrainNumberField complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="TrainNumberField"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{https://www.railml.org/schemas/3.2}IndicatingObject"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="primaryInStack" type="{https://www.railml.org/schemas/3.2}tElementWithIDref" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *       &lt;attribute name="numberInStack" type="{http://www.w3.org/2001/XMLSchema}positiveInteger" /&gt;
 *       &lt;attribute name="orientation" type="{https://www.railml.org/schemas/3.2}tStackOrientation" /&gt;
 *       &lt;attribute name="deleteOnLeave" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 *       &lt;attribute name="isAtBorder" type="{http://www.w3.org/2001/XMLSchema}boolean" /&gt;
 *       &lt;attribute name="usedForDirection" type="{https://www.railml.org/schemas/3.2}tExtendedDirection" /&gt;
 *       &lt;anyAttribute namespace='##other'/&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "TrainNumberField", propOrder = {
    "primaryInStack"
})
public class TrainNumberField
    extends IndicatingObject
{

    protected TElementWithIDref primaryInStack;
    @XmlAttribute(name = "numberInStack")
    @XmlSchemaType(name = "positiveInteger")
    protected BigInteger numberInStack;
    @XmlAttribute(name = "orientation")
    protected TStackOrientation orientation;
    @XmlAttribute(name = "deleteOnLeave")
    protected Boolean deleteOnLeave;
    @XmlAttribute(name = "isAtBorder")
    protected Boolean isAtBorder;
    @XmlAttribute(name = "usedForDirection")
    protected TExtendedDirection usedForDirection;

    /**
     * Gets the value of the primaryInStack property.
     * 
     * @return
     *     possible object is
     *     {@link TElementWithIDref }
     *     
     */
    public TElementWithIDref getPrimaryInStack() {
        return primaryInStack;
    }

    /**
     * Sets the value of the primaryInStack property.
     * 
     * @param value
     *     allowed object is
     *     {@link TElementWithIDref }
     *     
     */
    public void setPrimaryInStack(TElementWithIDref value) {
        this.primaryInStack = value;
    }

    /**
     * Gets the value of the numberInStack property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getNumberInStack() {
        return numberInStack;
    }

    /**
     * Sets the value of the numberInStack property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setNumberInStack(BigInteger value) {
        this.numberInStack = value;
    }

    /**
     * Gets the value of the orientation property.
     * 
     * @return
     *     possible object is
     *     {@link TStackOrientation }
     *     
     */
    public TStackOrientation getOrientation() {
        return orientation;
    }

    /**
     * Sets the value of the orientation property.
     * 
     * @param value
     *     allowed object is
     *     {@link TStackOrientation }
     *     
     */
    public void setOrientation(TStackOrientation value) {
        this.orientation = value;
    }

    /**
     * Gets the value of the deleteOnLeave property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isDeleteOnLeave() {
        return deleteOnLeave;
    }

    /**
     * Sets the value of the deleteOnLeave property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setDeleteOnLeave(Boolean value) {
        this.deleteOnLeave = value;
    }

    /**
     * Gets the value of the isAtBorder property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isIsAtBorder() {
        return isAtBorder;
    }

    /**
     * Sets the value of the isAtBorder property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setIsAtBorder(Boolean value) {
        this.isAtBorder = value;
    }

    /**
     * Gets the value of the usedForDirection property.
     * 
     * @return
     *     possible object is
     *     {@link TExtendedDirection }
     *     
     */
    public TExtendedDirection getUsedForDirection() {
        return usedForDirection;
    }

    /**
     * Sets the value of the usedForDirection property.
     * 
     * @param value
     *     allowed object is
     *     {@link TExtendedDirection }
     *     
     */
    public void setUsedForDirection(TExtendedDirection value) {
        this.usedForDirection = value;
    }

}
